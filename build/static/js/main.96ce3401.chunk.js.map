{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","Header","title","onAdd","showAdd","defaultProps","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","HEADERS","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PA4BeA,EAzBA,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,MAAMC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,QAM1B,OACE,wBAAQA,QAASA,EAASC,MAAO,CAAEC,gBAAiBJ,GAASK,UAAU,MAAvE,SACGJ,KCPDK,EAAS,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC9B,OACE,yBAAQJ,UAAU,SAAlB,UACE,6BAAKE,IACL,cAAC,EAAD,CACEP,MAAOS,EAAU,MAAQ,QACzBR,KAAMQ,EAAU,QAAU,MAC1BP,QAASM,QAMjBF,EAAOI,aAAe,CACpBH,MAAO,gBAQMD,Q,QCTAK,EAfF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC9B,OACE,sBAAKT,UAAS,eAAUO,EAAKG,SAAW,WAAY,IAAMC,cAAe,kBAAMF,EAASF,EAAKK,KAA7F,UACE,+BACGL,EAAKX,KAAM,IACZ,cAAC,IAAD,CACEE,MAAO,CAAEH,MAAO,MAAOkB,OAAQ,WAC/BhB,QAAS,kBAAMW,EAASD,EAAKK,UAGjC,4BAAIL,EAAKO,UCGAC,EAbD,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,MAAOR,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SAE/B,OACE,mCAGGO,EAAMC,KAAI,SAACV,EAAMW,GAAP,OACT,cAAC,EAAD,CAAkBX,KAAMA,EAAMC,SAAUA,EAAUC,SAAUA,GAAjDS,SC2CJC,EAlDC,SAAC,GAAa,IAAZhB,EAAW,EAAXA,MACd,EAAuBiB,mBAAS,IAAhC,mBAAOxB,EAAP,KAAYyB,EAAZ,KACA,EAAqBD,mBAAS,IAA9B,mBAAON,EAAP,KAAWQ,EAAX,KACA,EAA+BF,oBAAS,GAAxC,mBAAOV,EAAP,KAAgBa,EAAhB,KAgBA,OACA,uBAAMvB,UAAU,WAAWwB,SAfV,SAACC,GACdA,EAAEC,iBAEE9B,GACA+B,MAAM,qBAIVxB,EAAM,CAACP,OAAMkB,MAAKJ,aAElBW,EAAQ,IACRC,EAAO,IACPC,EAAY,KAGhB,UACI,sBAAKvB,UAAU,eAAf,UACA,yCAGA,uBAAO4B,KAAK,OAAOC,YAAY,WAAWC,MAAOlC,EACjDmC,SAAU,SAACN,GAAD,OAAMJ,EAAQI,EAAEO,OAAOF,aAEjC,sBAAK9B,UAAU,eAAf,UACA,+CAGA,uBAAO4B,KAAK,OAAOC,YAAY,iBAAiBC,MAAOhB,EACvDiB,SAAU,SAACN,GAAD,OAAMH,EAAOG,EAAEO,OAAOF,aAEhC,sBAAK9B,UAAU,kCAAf,UACA,iDAGA,uBAAO4B,KAAK,WAAWK,QAASvB,EAAUoB,MAAOpB,EACjDqB,SAAU,SAACN,GAAD,OAAMF,EAAYE,EAAES,cAAcD,eAG5C,uBAAOjC,UAAU,gBAAgB4B,KAAK,SAASE,MAAM,kBC0D9CK,MAlGf,WACE,MAAsCf,oBAAS,GAA/C,mBAAOgB,EAAP,KAAoBC,EAApB,KAGA,EAA0BjB,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcsB,EAAd,KAEAC,qBAAU,YACM,uCAAG,4BAAAC,EAAA,sEACeC,IADf,OACTC,EADS,OAEfJ,EAASI,GAFM,2CAAH,qDAKdC,KACC,IAGH,IAAMF,EAAU,uCAAG,8BAAAD,EAAA,sEACCI,MAAM,gCADP,cACXC,EADW,gBAEEA,EAAIC,OAFN,cAEXC,EAFW,yBAGVA,GAHU,2CAAH,qDAORC,EAAS,uCAAG,WAAOpC,GAAP,iBAAA4B,EAAA,sEACEI,MAAM,+BAAD,OAAgChC,IADvC,cACViC,EADU,gBAEGA,EAAIC,OAFP,cAEVC,EAFU,yBAGTA,GAHS,2CAAH,sDAMXE,EAAO,uCAAG,WAAO1C,GAAP,iBAAAiC,EAAA,sEACII,MAAM,8BAA+B,CACrDM,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU/C,KANT,cACRsC,EADQ,gBAQKA,EAAIC,OART,OAQRC,EARQ,OAUdT,EAAS,GAAD,mBAAKtB,GAAL,CAAY+B,KAVN,2CAAH,sDAmBPQ,EAAU,uCAAG,WAAO3C,GAAP,SAAA4B,EAAA,sEACXI,MAAM,+BAAD,OAAgChC,GAAM,CAC/CsC,OAAQ,WAFO,OAMjBZ,EAAStB,EAAMwC,QAAO,SAACjD,GAAD,OAAUA,EAAKK,KAAOA,MAN3B,2CAAH,sDAUV6C,EAAc,uCAAG,WAAO7C,GAAP,qBAAA4B,EAAA,sEACMQ,EAAUpC,GADhB,cACf8C,EADe,OAEfC,EAFe,2BAEAD,GAFA,IAGnBhD,UAAWgD,EAAahD,WAHL,SAMHkC,MAAM,+BAAD,OAAgChC,GACvD,CAACsC,OAAQ,MACTU,QAAS,CACP,eAAgB,oBAElBR,KAAMC,KAAKC,UAAUK,KAXA,cAMfd,EANe,gBAcJA,EAAIC,OAdA,OAcjBC,EAdiB,OAiBrBT,EACEtB,EAAMC,KAAI,SAACV,GAAD,OACRA,EAAKK,KAAOA,EAAZ,2BAAsBL,GAAtB,IAA4BG,SAAUqC,EAAKrC,WAAaH,MAnBvC,4CAAH,sDAwBpB,OACE,sBAAKP,UAAU,YAAf,UACE,cAAC,EAAD,CACEG,MAAO,kBAAMkC,GAAgBD,IAC7BhC,QAASgC,IAEVA,GAAe,cAAC,EAAD,CAASjC,MAAO8C,IAC/BjC,EAAM6C,OAAS,EACd,cAAC,EAAD,CAAO7C,MAAOA,EAAOR,SAAU+C,EAAY9C,SAAUgD,IAErD,uBCrFOK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.96ce3401.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({color,text,onClick}) => {\r\n\r\n// const onClick =(e) => {\r\n    \r\n// }\r\n\r\n  return (\r\n    <button onClick={onClick} style={{ backgroundColor: color }} className=\"btn\">\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\n// Button.defaultProps = {\r\n//     color: 'steelblue',\r\n//     text: 'Add me'\r\n// }\r\n\r\n// used to ensure if the component is using a correct data type\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Button;\r\n","// import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"./Button\";\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      <Button\r\n        color={showAdd ? \"red\" : \"green\"}\r\n        text={showAdd ? \"Close\" : \"Add\"}\r\n        onClick={onAdd}\r\n      />\r\n      {/* <Button color='green' text='Add'/> */}\r\n    </header>\r\n  );\r\n};\r\nHeader.defaultProps = {\r\n  title: \"Task Tracker\",\r\n  // or we can use title = 'Task Tracker' in App.js itself inside the Header return\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Header;\r\n","import { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div className={`task ${task.reminder ? 'reminder': ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n      <h3>\r\n        {task.text}{\" \"}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>  \r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n  \r\n  return (\r\n    <>\r\n      {/* map function is used in JS to map an array and puts them in order after being called in a function  */}\r\n      \r\n      {tasks.map((task, index) => (\r\n        <Task key={index} task={task} onDelete={onDelete} onToggle={onToggle}/>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n  \r\nexport default Tasks;\r\n","import { useState } from 'react' \r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text,setText] = useState('')\r\n    const [day,setDay] = useState('')\r\n    const [reminder,setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) =>{\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert('Please add a task'\r\n            )\r\n        }\r\n\r\n        onAdd({text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder('')\r\n    }\r\n    return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n        <div className='form-control'>\r\n        <label>\r\n            Task\r\n        </label>\r\n        <input type='text' placeholder='Add task' value={text}\r\n        onChange={(e)=> setText(e.target.value)} />\r\n        </div>\r\n        <div className='form-control'>\r\n        <label>\r\n            Day & Time\r\n        </label>\r\n        <input type='text' placeholder='Add Day & Time' value={day}\r\n        onChange={(e)=> setDay(e.target.value)}/>\r\n        </div>\r\n        <div className='form-control form-control-check'>\r\n        <label>\r\n            Set Reminder\r\n        </label>\r\n        <input type='checkbox' checked={reminder} value={reminder}\r\n        onChange={(e)=> setReminder(e.currentTarget.checked)}/>\r\n        </div>\r\n\r\n        <input className='btn btn-block' type='submit' value='Save Task'/>\r\n\r\n    </form>\r\n\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  // const name = 'Arjun'\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []);\n\n  //  fetch tasks\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks/');\n    const data = await res.json();\n    return data;\n  };\n\n    //  fetch task\n    const fetchTask = async (id) => {\n      const res = await fetch(`http://localhost:5000/tasks/${id}`);\n      const data = await res.json();\n      return data;\n    };\n  //  Add Task\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n    const data = await res.json();\n\n    setTasks([...tasks, data]);\n\n    // const id = Math.floor(Math.random() * 10000)+1\n    // const newTask = { id, ...task}\n    // setTasks([...tasks, newTask])\n  };\n\n  // Delete Task\n\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\",\n    });\n\n    // console.log('delete',id)\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  //  Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, \n      reminder: !taskToToggle.reminder\n\n    }\n    const res = await fetch(`http://localhost:5000/tasks/${id}`,\n    {method: 'PUT',\n    HEADERS: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(updTask)\n  })\n\n  const data = await res.json()\n\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        onAdd={() => setShowAddTask(!showAddTask)}\n        showAdd={showAddTask}\n      />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"Add new tasks...\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}